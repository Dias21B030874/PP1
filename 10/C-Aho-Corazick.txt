#include <iostream>
#include <vector>
#include <queue>
using namespace std;

const int n = 1e4;
int a, b;
int d[n + 1], p[n + 1];
vector<int> path, g[n + 1];
queue<int> q;

int main() {
  for(int i = 1; i <= n; i++) {
    d[i] = 2e9;
    p[i] = -1;
  }
  cin >> a >> b;
  for(int i = 1; i <= n; i++) {
    if(i * 2 <= n) g[i].push_back(i * 2);
    if(i - 1 > 0) g[i].push_back(i - 1);
  }
  q.push(a);
  d[a] = 0;
  while(!q.empty()) {
    int v = q.front();
    q.pop();
    for(auto u : g[v]) {
      if(d[v] + 1 < d[u] && u < n + 1) {
        q.push(u);
        d[u] = d[v] + 1;
        p[u] = v;
      }
    }
  }
  cout << d[b] << "\n";
  for(int v = b; v != -1; v = p[v]) path.push_back(v);
  for(int i = path.size() - 2; i >= 0; i--) cout << path[i] << " ";
  return 0;
}