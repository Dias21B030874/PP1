#include <bits/stdc++.h>
using namespace std;
#define ll long long 

void lsp(string p, vector<ll>&vec){

    vec[0] = 0;                   
    ll j = 0,i=1;
    while (i<p.size()){
        if(p[i]==p[j]){   
            j++;
            vec[i] = j;
            i++;
        }
        else{                   
            if(j==0){         
                vec[i] = 0;
                i++;
            }
            else{              
                j = vec[j-1];
            }
        }
    }
}
ll KMP(string p,string s){
    ll a;
    ll cnt=0;
    ll n = s.size();
    ll m = p.size();
    ll i=0,j=0;
    vector<ll>vec(m);
    lsp(p,vec); 
    while(i<n){
        if(p[j]==s[i]){i++;j++;} 

        if (j == m) { 
            cnt++;
            j = vec[j - 1]; 
        } 
        else if (i < n && p[j] != s[i]) {
            if (j == 0)          
                i++;
            else
                j = vec[j - 1];  
        }

    }
    return -1;
}


int main(){
    string s,p="";
    cin>>s;
    ll ans=0;

    if(s.size()==0) {cout<<0; return 0;}

    for ( ll z = 0; z < (s.size()-1)/2; z++)
    {
        p +=s[z];
        bool b = 1;
        for (int i = 0; i < p.size(); i++)
        {
            if(p[i]!=s[z+i+1]){
                b=0;
                break;
            }
        }
        if(b){
        ans++;
        }
        
    }
    cout<<ans;

    return 0;
}