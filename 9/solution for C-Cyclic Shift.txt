#include <bits/stdc++.h>
using namespace std;
#define ll long long 

void lsp(string p, vector<ll>&vec){
    vec[0] = 0;                   
    ll j = 0,i=1;
    while (i<p.size()){
        if(p[i]==p[j]){   
            j=j+1;
            vec[i] = j;
            i=i+1;
        }
        else{                   
            if(j==0){         
                vec[i] = 0;
                i=i+1;
            }
            else{              
                j = vec[j-1];
            }
        }
    }
}
ll KMP(string p,string s){
    ll n = s.size();
    ll m = p.size();
    ll i=0,j=0;
    vector<ll>vec(m);
    lsp(p,vec); 
    while(i<n){
        if(p[j]==s[i]){i++;j++;} 

        if (j == m) { 
            return i - m;
            j = vec[j - 1]; 
        } 
        else if (i < n && p[j] != s[i]) {
            if (j == 0)          
                i=1+i;
            else
                j = vec[j - 1];  
        }
    }
    return -1;
}


int main(){
    string s,p;
    cin>>s>>p;
    ll a = KMP(p, s+s);
    if(a!=-1){
        cout<<s.size()-a;
    }else{
        cout<<a;
    }   
    return 0;
}