#include <bits/stdc++.h>
using namespace std;
int n, m;
int p[1000000], r[1000000];
int search(int i){
    return (i == p[i]) ? i : p[i] = search(p[i]);
}
bool merge(int i, int j){
    int a = search(i), b =search(j);
    if(a == b)return false;
    p[a] = b;
    return 1;
}
int main(){
    cin >> n >> m;
    int used[n];
    vector<int> graph[n];
    for(int i = 0; i < n; i++)    {
		p[i] = i;
		r[i] = i;
		}
    while(m--){
        int u, v;
        cin >> u >> v;
        u--;
        v--;
        graph[u].push_back(v);
        graph[v].push_back(u);
    }
    vector<int> ans;
    
    int cnt = 0;
    for(int i = n-1; i >= 0; i--){
        ans.push_back(cnt++);
        for(int x : graph[i]){
            if(x > i){
                if(merge(i, x))cnt--;
            }
        }
    }
    for(int i = ans.size()-1; i >= 0; i--)
        cout << ans[i] << endl;
    return 0;
}